version: "3"

dotenv: [".env"]  # Load variables automatically from .env at project root

# Taskfile for local development and testing
# Requires: https://taskfile.dev

# Usage examples:
#   EMAIL_API_KEY=yourkey 
#   EMAIL_PROVIDER_FROM=from@example.com \
#   EMAIL_PROVIDER_REPLY_TO=reply@example.com task run
#
# The run-manager task disables the metrics endpoint (metrics-bind-address=0) and skips any
# other production-specific settings so you can focus on testing the Email
# controller logic locally.

tasks:
  # Run the controller manager locally
  run-manager:
    desc: "Run the controller manager locally with minimal settings"
    cmds:
      - |
        # Ensure required environment variables are present
        : ${RESEND_API_KEY:?RESEND_API_KEY environment variable is required}
        : ${EMAIL_FROM_ADDRESS:?EMAIL_FROM_ADDRESS environment variable is required}
        : ${EMAIL_REPLY_TO_ADDRESS:?EMAIL_REPLY_TO_ADDRESS environment variable is required}
        
        go run ./cmd manager \
          --metrics-bind-address 0 \
          --resend-api-key "$RESEND_API_KEY" \
          --email-from-address "$EMAIL_FROM_ADDRESS" \
          --email-reply-to-address "$EMAIL_REPLY_TO_ADDRESS"

    env:
      # Propagate the variables set in the shell to Task so they can be used in the
      # command block above. Values can be provided via the environment or a .env
      # file.
      RESEND_API_KEY: "{{.RESEND_API_KEY}}"
      EMAIL_FROM_ADDRESS: "onboarding@resend.dev"
      EMAIL_REPLY_TO_ADDRESS: "delivered@resend.dev"
